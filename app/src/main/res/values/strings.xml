<resources>
    <!-- usual stuff -->
    <string name="app_name">DragAndQuery</string>
    <string name="splash_title">Drag and Query</string>
    <string name="title_activity_dashboard">Dashboard</string>
    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>
    <string name="nav_header_title">Drag And Query</string>
    <string name="nav_header_subtitle">pkoetz, vruss u. pabels</string>
    <string name="nav_header_desc">Navigation header</string>
    <string name="action_settings">Settings</string>

    <!-- nd + settings -->
    <string name="menu_home">Home</string>
    <string name="menu_free">Freier Modus</string>
    <string name="menu_tutorial">Tutorial</string>
    <string name="menu_practice">Übungen</string>
    <string name="menu_settings">Einstellungen</string>
    <string name="menu_impressum">Impressum</string>
    <string name="title_activity_navigation">Navigation</string>
    <string name="others">Sonstiges</string>
    <string name="welcome">Ändere dein Profilbild</string>
    <string name="reset_tutorial">Tutorial zurücksetzen</string>
    <string name="reset_practise">Übungen zurücksetzen</string>
    <string name="start_btn_go">Go!</string>
    <string name="loginName_hint">Name</string>
    <string name="loginMail_hint">Mail</string>
    <string name="save">Speichern</string>

    <!-- practice -->
    <string name="prac_easy">Leicht</string>
    <string name="prac_medium">Mittel</string>
    <string name="prac_hard">Schwer</string>

    <string name="ex_easy_1">Schlüssel</string>
    <string name="ex_easy_2">Join</string>
    <string name="ex_easy_3">Select</string>
    <string name="ex_easy_4">Aggregate</string>

    <string name="title_activity_practice">Schwierigkeitsgrad</string>
    <string name="title_activity_practices">Übungen</string>
    <string name="title_prac_easy">Leichte Übungen</string>
    <string name="title_prac_medium">Mittelschwere Übungen</string>
    <string name="title_prac_hard">Schwere Übungen</string>

    <!-- tutorial -->
    <string name="feedback_back">Zurück</string>
    <string name="feedback_forth">Weiter</string>
    <string name="feedback_msg_good">Das war super!</string>
    <string name="feedback_msg_bad">Probier es nochmal!</string>
    <string name="accept_input">Verstanden!</string>

    <string name="cat1_lec1">Einsatzmöglichkeiten für Datenbanken</string>
    <string name="cat1_lec2">Von Datenbanken und Tabellen</string>
    <string name="cat1_lec3">Relation</string>
    <string name="cat1_lec4">Zeilen, Spalten, Attribute</string>
    <string name="cat1_lec5">Anforderungen an Tabellen</string>
    <string name="cat1_lec6">Datentypen von Attributen</string>
    <string name="cat1_lec7">Eindeutigkeit dank Schlüsseln</string>
    <string name="cat1_lec8">Fremdschlüssel</string>
    <string name="cat1_lec9">Erste Abfrage mit dem SELECT-Befehl</string>
    <string name="cat1_lec10">Attribute im SLEECT-Block</string>
    <string name="cat1_lec11">Wir gehen ans Limit mit dem LIMIT-Befehl</string>

    <string name="cat2_lec1">Der WHERE-Befehl</string>
    <string name="cat2_lec2">Es muss nicht alles gleich sein</string>
    <string name="cat2_lec3">Größer oder kleiner?</string>
    <string name="cat2_lec4">Ordnung ist das halbe Leben</string>
    <string name="cat2_lec5">Zwischen den Stühlen?</string>
    <string name="cat2_lec6">Oder oder Oder?</string>
    <string name="cat2_lec7">Und und und...</string>
    <string name="cat2_lec8">Aber nicht doch</string>
    <string name="cat2_lec9">Wahr oder nicht wahr?</string>
    <string name="cat2_lec10">Ganz oder gar nicht!</string>
    <string name="cat2_lec11">Mittendrin ist auch dabei</string>
    <string name="cat2_lec12">Unsicher? LIKE!</string>
    <string name="cat2_lec13">Doppelt hält (nicht) besser</string>
    <string name="cat2_lec14">Ein bisschen Mathe gefällig?</string>
    <string name="cat2_lec15">Nenn mich doch lieber...?</string>

    <string name="cat3_lec1">Aggrewer?</string>
    <string name="cat3_lec2">Zählen bitte!</string>
    <string name="cat3_lec3">Klopf Klopf</string>
    <string name="cat3_lec4">Grüner leben dank der Summenfunktion</string>
    <string name="cat3_lec5">Grupeenbildung hey!</string>
    <string name="cat3_lec6">Manchmal reicht es Durchschnitt zu sein</string>
    <string name="cat3_lec7">Erfolg maximieren, Aufwand minimieren</string>
    <string name="cat3_lec8">Wherecome to Having</string>

    <string name="cat4_lec1">Es kommt zusammen, was zusammen gehört</string>
    <string name="cat4_lec2">Fremdschlüssel sind Key</string>
    <string name="cat4_lec3">Üben, üben, üben</string>
    <string name="cat4_lec4">Noch ein bisschen JOINen</string>
    <string name="cat4_lec5">Doppelt hält besser</string>
    <string name="cat4_lec6">Darf\'s ein bisschen mehr sein?</string>
    <string name="cat4_lec7">Aller guten Dinge sind drei</string>

    <string name="c1l1_input">
        Datenbanken sichern die Vollständigkeit, Richtigkeit und Verfügbarkeit von großen Datenmengen.\n\n
        In jeder Schule müssen Kontaktdaten von Lehrkräften und Schüler*innen, Stundenpläne, Raumpläne und andere Daten gespeichert werden.\n\n
        Durch die Nutzung einer Datenbank geschieht das effizient, widerspruchsfrei und dauerhaft.
    </string>
    <string name="c1l1_question">In welchem der folgenden Bereiche lohnt sich der Einsatz einer Datenbank nicht?</string>
    <string name="c1l1_answer1">Addressbuch</string>
    <string name="c1l1_answer2">Familienkalender</string>
    <string name="c1l1_answer3">Einkaufsliste</string>

    <string name="c1l2_input">
        Im Grunde ist auch dein Stundenplan eine Datenbank.\n\n
	Gespeichert ist hier für jeden Tag, welcher Unterricht um welche Uhrzeit stattfindet.\n\n
	Die Datenmenge deiner Schule ist natürlich viel größer als nur dein Stundenplan und deine Adresse, zum Beispiel, steht ja auch nicht auf deinem Stundenplan.\n\n
	Deshalb besteht die Datenbank deiner Schule auch nicht aus einer, sondern aus mehreren Tabellen.\n\n
	So stehen die Kontaktdaten aller Schüler*innen in einer Tabelle und die Unterrichtszeiten der Lehrkräfte in einer anderen.
    </string>

    <string name="c1l3_input">
        Am häufigsten werden relationale Datenbanken verwendet.\n\n
	Eine Relation bezeichnet allgemein die Beziehung zwischen etwas.\n\n
	In relationalen Datenbanken werden die Inhalte also in Beziehung zueinander gestellt.\n\n
	So ist jede Tabelle einer relationalen Datenbank selbst eine Relation.\n\n
	Jede*r Schüler*in hat eine Adresse.\n\n
	Diese werden einander in einer Tabelle eindeutig zugeordnet.
    </string>

    <string name="c1l4_input">
       Jede Tabelle hat einen Namen und besteht aus Zeilen und Spalten.\n\n
	Die Spaltennamen werden als „Attribute“ bezeichnet, in jeder Zeile steht ein zusammengehörender Datensatz, ein „Tupel“.\n\n
	So bildet jede Tabelle ein „Relationenschema“.
    </string>

    <string name="c1l5_input">
        Datensätze bestehen aus Attributwerten.\n\n
	Diese müssen natürlich zum Attribut passen.\n\n
	So kann als Geburtsdatum nur ein Datum gespeichert werden und kein Wort.\n\n
	Außerdem kann man in jede Zelle nureinen Eintrag schreiben, du kannst also nicht einer Lehrkraft in einer Zeile mehrere Klassen zuordnen,
obwohl sie in allen unterrichtet.
    </string>

    <string name="c1l6_input">
        Manchmal weiß mal leider gar nicht, wann eine Person beispielsweise Geburtstag hat.\n\n
	Daher gibt es dieMöglichkeit; NULL in die betreffende Zelle zu schreiben.\n\n
	Dieser wird immer dann verwendet, wenn die Information unbekannt ist.
    </string>

    <string name="c1l7_input">
        Schlüssel.
    </string>

    <string name="c1l8_input">
        Um zu sehen was in der Datenbank gespeichert ist stellt man Anfragen.\n\n
	Damit der Computer diese verarbeiten kann nutzen wir Befehle in SQL (Structured Query Language).\n\n
	Hier mehr zu sql (Syntax), nicht direkt anfragen, sondern drag and drop kennenlernenUm dir eine ganze Tabelle anzeigen zu lassen verwende den Befehl SELECT * FROM Tabellenname.\n\n
	Probiere es doch mal aus!
    </string>

    <string name="c1l9_input">
        Das Ergebnis eben war ganz schön groß, weil der * Befehl dir alles ausgibt, was in der Tabelle gespeichert ist.\n\n
	Versuche jetzt dir nur die Spalten Vorname und Nachname anzeigen zu lassen.
    </string>

    <string name="c1l10_input">
        In dieser Schule sind ganz schön viele Schüler.\n\n
	Versuche mit dem LIMIT Befehl dir nur die ersten 10 Vornamen anzeigen zu lassen
    </string>

    <string name="head_tutorial">Tutorial</string>
    <string name="tutorial_category1">Relationale Datanbanken</string>
    <string name="tutorial_category2">Bedingungen</string>
    <string name="tutorial_category3">Aggregatfunktionen</string>
    <string name="tutorial_category4">Join</string>

    <string name="title_activity_tutorial_category">Tutorial Category</string>
    <string name="title_activity_tutorial">Tutorial</string>

    <!-- key value store -->
    <string name="userImageBool_key">userImageBool</string>
    <string name="userImage_key">userImage</string>
    <string name="userName_key">userName</string>
    <string name="userMail_key">userMail</string>

    <string name="tutScore1_key">tutScore1</string>
    <string name="tutScore1_unlocked_key">tutScore1_unlocked</string>
    <string name="tutScore2_key">tutScore2</string>
    <string name="tutScore2_unlocked_key">tutScore2_unlocked</string>
    <string name="tutScore3_key">tutScore3</string>
    <string name="tutScore3_unlocked_key">tutScore3_unlocked</string>
    <string name="tutScore4_key">tutScore4</string>
    <string name="tutScore4_unlocked_key">tutScore4_unlocked</string>

    <string name="pracScore_key">pracScore</string>
    <string name="prac_easy_key">pracEasy</string>
    <string name="prac_medium_key">pracMedium</string>
    <string name="prac_hard_key">pracHard</string>

    <!-- profile -->
    <string name="default_name">admin</string>
    <string name="default_mail">admin@dnq.de</string>
    <string name="pb_tutorial">Tutorial</string>
    <string name="pb_practise">Übungen</string>
    <string name="btn_retry">Retry!</string>
    <string name="table_msg_well_done">Gut gemacht!</string>

    <!-- blocks -->
    <string name="block_cat1">DB</string>
    <string name="block_cat2">Logik</string>
    <string name="block_cat3">Schlüssel Worte</string>
    <string name="block_cat4">Sonstige</string>

    <string name="block_select">Select </string>
    <string name="block_from">From </string>
    <string name="block_where">Where </string>
    <string name="block_star">* </string>

    <!-- toasts -->
    <string name="toast_notUnlockedYet">Noch nicht freigeschaltet!</string>
    <string name="toast_alreadyDone">Bereits erledigt!</string>
    <string name="toast_ImagePermissionDenied">Leider ist diese Funktion nicht möglich!</string>

    <!-- errors -->
    <string name="select_missing_error">Ich finde leider kein SELECT ...</string>
    <string name="large_text">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
</resources>
